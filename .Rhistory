install.packages("knitr")
install.packages("BoolNet")
install.packages("XML")
install.packages("xml2")
install.packages("BoolNet")
install.packages("XML")
library(reshape2)
library(ggplot2)
library(scales)
#install.packages("BoolNet")
library("BoolNet")
#library(devtools)
#install_github("mar-esther23/boolnet-perturb")
library(BoolNetPerturb)
#
# Setup and Definition
#
setwd("/home/chaperone/projects/computationalSystemBiology")
network = loadSBML("MODEL1606020000.xml")
microenvironment = c("IL12e", "IFNGe", "IL2e", "IL4e", "IL21e", "TGFBe", "IL10e", "IL27e", "INSULIN")
pro_Th0 = c(0,0,0,0,0,0,0,0,0)
pro_Th1 = c(1,1,0,0,0,0,0,0,0)
pro_Th2 = c(0,0,1,1,0,0,0,0,0)
pro_Th17 =c(0,0,0,0,1,1,0,0,0)
pro_iTreg=c(0,0,1,0,0,1,0,0,0)
pro_Tr1 = c(0,0,0,0,0,0,1,1,0)
add_pro_Th9 = c(0,0,0,1,0,1,0,0,0)
add_pro_Tfh = c(1,0,0,0,1,0,0,0,0) # maybe Il2e instead of IL12e
MicroEnv = matrix(c(pro_Th0,pro_Th1,pro_Th2,pro_Th17,pro_iTreg,pro_Tr1), ncol = length(microenvironment), byrow = TRUE)
colnames(MicroEnv) = microenvironment
rownames(MicroEnv) = c("pro_Th0", "pro_Th1", "pro_Th2", "pro_Th17", "pro_iTreg", "pro_Tr1")
network = fixGenes(network, fixIndices = microenvironment, values = add_pro_Th9)
STG = getAttractors(network)
plotStateGraph(STG)
#
# Attractor Rules for Labeling
#
labels = c("Th0", "Th1", "TBET+", "Th1R", "Th2", "GATA3+" , "Th2R", "Th17" , "RORGT+" , "iTreg", "IL10+", "TGFB+")
rules = c("!(TBET | GATA3 | RORGT | FOXP3 | IL10 | TGFB)", "(TBET & IFNG) & !(IL10 | TGFB | FOXP3)", " TBET & !(IFNG | IL10 | TGFB | FOXP3) ", " TBET & (IL10 | TGFB | FOXP3) ", "(GATA3 & IL4) & ! (IL10 | TGFB | FOXP3) ",
" GATA3 & ! (IL4 | IL10 | TGFB| FOXP3)" , " GATA3 & (IL10 | TGFB | FOXP3)" , "RORGT & IL21 & ! IL10" ,
"RORGT & ! (IL21 | IL10)" , "FOXP3 & TGFB & ! (TBET | GATA3 | RORGT)" , "IL10 & ! (TBET | GATA3 | FOXP3 | RORGT)",
"TGFB & ! (TBET | GATA3 | FOXP3 | RORGT)")
hybrid_label = "Tbet+Gata3+Foxp3+"
hybrid_rule = "TBET & GATA3 & FOXP3"
df.rules = data.frame(labels, rules)
#
# Label attractors of STG
#
BoolNetPerturb::labelAttractors(STG, df.rules)
#
# Determin Cell Differentiation
# > based upon microenvironment (without perturbations)
# > display basin of attraction size for different celltypes
getCellDifferentiationBasinSizes = function(network, micro_env, micro_val, insulin = 0, knockout=vector(), knockin=vector(), attractorLabels, label.rules) {
basinSizes = rep(0, length(attractorLabels))
names(basinSizes) = attractorLabels
#fix microenvironment | knock-out genes | and insulin
micro_val[length(micro_val)] = insulin
for(gene in knockin) {
micro_env = c(micro_env, gene)
micro_val = c(micro_val, 1)
}
for(gene in knockout) {
micro_env = c(micro_env, gene)
micro_val = c(micro_val, 0)
}
network = fixGenes(network, fixIndices = micro_env, values = micro_val)
attr = getAttractors(network, type = "synchronous")
attrLabels = BoolNetPerturb::labelAttractors(attr, label.rules = label.rules)
for (i in 1:length(attr$attractors)) {
if (attrLabels[i] %in% attractorLabels) {
basinSizes[attrLabels[i]] = basinSizes[attrLabels[i]] + attr$attractors[[i]]$basinSize
} else {
print(attrLabels[i])
}
}
return(basinSizes)
}
getCellDifferentiationBasinSizes(network, micro_env = microenvironment, micro_val = pro_Th0, knockout = "IL10", insulin = 0, attractorLabels = c(labels, "IL10+TGFB+"), label.rules = df.rules)
# Compute entire matrix
M = vector()
for(i in 1:nrow(MicroEnv)) {
pro_mic = MicroEnv[i,]
M = c(M, getCellDifferentiationBasinSizes(network, micro_env = microenvironment, micro_val = pro_mic, insulin = 1, attractorLabels = c(labels, "IL10+TGFB+"), label.rules = df.rules))
}
M = matrix(M, nrow = nrow(MicroEnv), byrow = TRUE)
colnames(M) = c(labels, "IL10+TGFB+")
rownames(M) = rownames(MicroEnv)
y_ord = rownames(M)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
# Compute entire matrix
M = vector()
for(i in 1:nrow(MicroEnv)) {
pro_mic = MicroEnv[i,]
M = c(M, getCellDifferentiationBasinSizes(network, micro_env = microenvironment, micro_val = pro_mic, insulin = 0, attractorLabels = c(labels, "IL10+TGFB+"), label.rules = df.rules))
}
M = matrix(M, nrow = nrow(MicroEnv), byrow = TRUE)
colnames(M) = c(labels, "IL10+TGFB+")
rownames(M) = rownames(MicroEnv)
y_ord = rownames(M)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
M
M[,-3]
M[,c(-3,-9)]
M = M[,c(-3,-9)]
y_ord = rownames(M)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
y_ord = rownames(M)
jpeg('basalHeatmap.jpg')
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
dev.off()
jpeg('basalHeatmap.jpg', width = 10, height = 5)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
dev.off()
jpeg('basalHeatmap.jpg', width = 200, height = 100)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
dev.off()
jpeg('basalHeatmap.jpg',units = "cm", width = 20, height = 10)
?jpeg
jpeg('basalHeatmap.jpg',units = "cm" , width = 20.0, height = 10.0)
jpeg('basalHeatmap.jpg',units = "cm" , width = 20.0, height = 10.0, res = 600)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
dev.off()
jpeg('basalHeatmap.jpg',units = "cm" , width = 25.0, height = 15.0, res = 600)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
dev.off()
M
y_ord = rownames(M)
jpeg('basalHeatmap.jpg',units = "cm" , width = 25.0, height = 15.0, res = 600)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "grey", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
dev.off()
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "grey", low = "white", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "thistle2", high = "violetred3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "thistle2", high = "violetred4", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "thistle2", high = "deeppink4", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "thistle2", high = "deeppink3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "thistle1", high = "deeppink3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
jpeg('basalHeatmap.jpg',units = "cm" , width = 25.0, height = 15.0, res = 600)
ggplot(melt(M), aes(Var2, ordered(Var1, rev(y_ord)) , fill=value)) +
geom_tile(aes(fill = value), colour = "white") +
scale_fill_gradient(na.value = "white", low = "thistle1", high = "deeppink3", trans = log10_trans(), limits = c(NA, 1024)) +
xlab("Cell type") +
ylab("Micro-environment")
dev.off()
